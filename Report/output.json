{"content": {"suites": {"0": {"status": {"total_pass": 0, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 1}, "tests": {"0": {"status": "ERROR", "message": "self = <_pytest.config.Config object at 0x000001B31F42EAC0>, name = '--browser', default = <NOTSET>, skip = False\n\n    def getoption(self, name: str, default=notset, skip: bool = False):\n        \"\"\"Return command line option value.\n    \n        :param name: Name of the option.  You may also specify\n            the literal ``--OPT`` option instead of the \"dest\" option name.\n        :param default: Default value if no option of that name exists.\n        :param skip: If True, raise pytest.skip if option does not exists\n            or has a None value.\n        \"\"\"\n        name = self._opt2dest.get(name, name)\n        try:\n>           val = getattr(self.option, name)\nE           AttributeError: 'Namespace' object has no attribute '--browser'\n\nC:\\Users\\MIMO\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\_pytest\\config\\__init__.py:1463: AttributeError\n\nThe above exception was the direct cause of the following exception:\n\nrequest = <SubRequest 'browser' for <Function test_LOGIN_SES_1>>\n\n    @pytest.fixture(scope=\"class\", autouse=True)\n    def browser(request):\n        \"\"\"\n        This function return the Browser value to setup method\n        \"\"\"\n>       return request.config.getoption(\"--browser\")\nE       ValueError: no option named '--browser'\n\ntestcase\\conftest.py:81: ValueError\n", "test_name": "test_LOGIN_SES_1", "rerun": "0"}}, "suite_name": "testcase/Login/CAP/test_LOGIN_AUTH_1.py"}, "1": {"suite_name": "testcase/Login/CAP/test_LOGIN_AUTH_10.py", "tests": {"0": {"status": "ERROR", "message": "self = <_pytest.config.Config object at 0x000001B31F42EAC0>, name = '--browser', default = <NOTSET>, skip = False\n\n    def getoption(self, name: str, default=notset, skip: bool = False):\n        \"\"\"Return command line option value.\n    \n        :param name: Name of the option.  You may also specify\n            the literal ``--OPT`` option instead of the \"dest\" option name.\n        :param default: Default value if no option of that name exists.\n        :param skip: If True, raise pytest.skip if option does not exists\n            or has a None value.\n        \"\"\"\n        name = self._opt2dest.get(name, name)\n        try:\n>           val = getattr(self.option, name)\nE           AttributeError: 'Namespace' object has no attribute '--browser'\n\nC:\\Users\\MIMO\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\_pytest\\config\\__init__.py:1463: AttributeError\n\nThe above exception was the direct cause of the following exception:\n\nrequest = <SubRequest 'browser' for <Function test_LOGIN_AUTH_10>>\n\n    @pytest.fixture(scope=\"class\", autouse=True)\n    def browser(request):\n        \"\"\"\n        This function return the Browser value to setup method\n        \"\"\"\n>       return request.config.getoption(\"--browser\")\nE       ValueError: no option named '--browser'\n\ntestcase\\conftest.py:81: ValueError\n", "test_name": "test_LOGIN_AUTH_10", "rerun": "0"}}, "status": {"total_pass": 0, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 1}}, "2": {"suite_name": "testcase/Login/CAP/test_LOGIN_AUTH_11.py", "tests": {"0": {"status": "ERROR", "message": "self = <_pytest.config.Config object at 0x000001B31F42EAC0>, name = '--browser', default = <NOTSET>, skip = False\n\n    def getoption(self, name: str, default=notset, skip: bool = False):\n        \"\"\"Return command line option value.\n    \n        :param name: Name of the option.  You may also specify\n            the literal ``--OPT`` option instead of the \"dest\" option name.\n        :param default: Default value if no option of that name exists.\n        :param skip: If True, raise pytest.skip if option does not exists\n            or has a None value.\n        \"\"\"\n        name = self._opt2dest.get(name, name)\n        try:\n>           val = getattr(self.option, name)\nE           AttributeError: 'Namespace' object has no attribute '--browser'\n\nC:\\Users\\MIMO\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\_pytest\\config\\__init__.py:1463: AttributeError\n\nThe above exception was the direct cause of the following exception:\n\nrequest = <SubRequest 'browser' for <Function test_LOGIN_AUTH_11>>\n\n    @pytest.fixture(scope=\"class\", autouse=True)\n    def browser(request):\n        \"\"\"\n        This function return the Browser value to setup method\n        \"\"\"\n>       return request.config.getoption(\"--browser\")\nE       ValueError: no option named '--browser'\n\ntestcase\\conftest.py:81: ValueError\n", "test_name": "test_LOGIN_AUTH_11", "rerun": "0"}}, "status": {"total_pass": 0, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 1}}, "3": {"suite_name": "testcase/Login/CAP/test_LOGIN_AUTH_12.py", "tests": {"0": {"status": "ERROR", "message": "self = <_pytest.config.Config object at 0x000001B31F42EAC0>, name = '--browser', default = <NOTSET>, skip = False\n\n    def getoption(self, name: str, default=notset, skip: bool = False):\n        \"\"\"Return command line option value.\n    \n        :param name: Name of the option.  You may also specify\n            the literal ``--OPT`` option instead of the \"dest\" option name.\n        :param default: Default value if no option of that name exists.\n        :param skip: If True, raise pytest.skip if option does not exists\n            or has a None value.\n        \"\"\"\n        name = self._opt2dest.get(name, name)\n        try:\n>           val = getattr(self.option, name)\nE           AttributeError: 'Namespace' object has no attribute '--browser'\n\nC:\\Users\\MIMO\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\_pytest\\config\\__init__.py:1463: AttributeError\n\nThe above exception was the direct cause of the following exception:\n\nrequest = <SubRequest 'browser' for <Function test_LOGIN_AUTH_12>>\n\n    @pytest.fixture(scope=\"class\", autouse=True)\n    def browser(request):\n        \"\"\"\n        This function return the Browser value to setup method\n        \"\"\"\n>       return request.config.getoption(\"--browser\")\nE       ValueError: no option named '--browser'\n\ntestcase\\conftest.py:81: ValueError\n", "test_name": "test_LOGIN_AUTH_12", "rerun": "0"}}, "status": {"total_pass": 0, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 1}}, "4": {"suite_name": "testcase/Login/CAP/test_LOGIN_AUTH_2.py", "tests": {"0": {"status": "ERROR", "message": "self = <_pytest.config.Config object at 0x000001B31F42EAC0>, name = '--browser', default = <NOTSET>, skip = False\n\n    def getoption(self, name: str, default=notset, skip: bool = False):\n        \"\"\"Return command line option value.\n    \n        :param name: Name of the option.  You may also specify\n            the literal ``--OPT`` option instead of the \"dest\" option name.\n        :param default: Default value if no option of that name exists.\n        :param skip: If True, raise pytest.skip if option does not exists\n            or has a None value.\n        \"\"\"\n        name = self._opt2dest.get(name, name)\n        try:\n>           val = getattr(self.option, name)\nE           AttributeError: 'Namespace' object has no attribute '--browser'\n\nC:\\Users\\MIMO\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\_pytest\\config\\__init__.py:1463: AttributeError\n\nThe above exception was the direct cause of the following exception:\n\nrequest = <SubRequest 'browser' for <Function test_LOGIN_AUTH_2>>\n\n    @pytest.fixture(scope=\"class\", autouse=True)\n    def browser(request):\n        \"\"\"\n        This function return the Browser value to setup method\n        \"\"\"\n>       return request.config.getoption(\"--browser\")\nE       ValueError: no option named '--browser'\n\ntestcase\\conftest.py:81: ValueError\n", "test_name": "test_LOGIN_AUTH_2", "rerun": "0"}}, "status": {"total_pass": 0, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 1}}, "5": {"suite_name": "testcase/Login/CAP/test_LOGIN_AUTH_3.py", "tests": {"0": {"status": "ERROR", "message": "self = <_pytest.config.Config object at 0x000001B31F42EAC0>, name = '--browser', default = <NOTSET>, skip = False\n\n    def getoption(self, name: str, default=notset, skip: bool = False):\n        \"\"\"Return command line option value.\n    \n        :param name: Name of the option.  You may also specify\n            the literal ``--OPT`` option instead of the \"dest\" option name.\n        :param default: Default value if no option of that name exists.\n        :param skip: If True, raise pytest.skip if option does not exists\n            or has a None value.\n        \"\"\"\n        name = self._opt2dest.get(name, name)\n        try:\n>           val = getattr(self.option, name)\nE           AttributeError: 'Namespace' object has no attribute '--browser'\n\nC:\\Users\\MIMO\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\_pytest\\config\\__init__.py:1463: AttributeError\n\nThe above exception was the direct cause of the following exception:\n\nrequest = <SubRequest 'browser' for <Function test_LOGIN_AUTH_3>>\n\n    @pytest.fixture(scope=\"class\", autouse=True)\n    def browser(request):\n        \"\"\"\n        This function return the Browser value to setup method\n        \"\"\"\n>       return request.config.getoption(\"--browser\")\nE       ValueError: no option named '--browser'\n\ntestcase\\conftest.py:81: ValueError\n", "test_name": "test_LOGIN_AUTH_3", "rerun": "0"}}, "status": {"total_pass": 0, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 1}}, "6": {"suite_name": "testcase/Login/CAP/test_LOGIN_AUTH_4.py", "tests": {"0": {"status": "ERROR", "message": "self = <_pytest.config.Config object at 0x000001B31F42EAC0>, name = '--browser', default = <NOTSET>, skip = False\n\n    def getoption(self, name: str, default=notset, skip: bool = False):\n        \"\"\"Return command line option value.\n    \n        :param name: Name of the option.  You may also specify\n            the literal ``--OPT`` option instead of the \"dest\" option name.\n        :param default: Default value if no option of that name exists.\n        :param skip: If True, raise pytest.skip if option does not exists\n            or has a None value.\n        \"\"\"\n        name = self._opt2dest.get(name, name)\n        try:\n>           val = getattr(self.option, name)\nE           AttributeError: 'Namespace' object has no attribute '--browser'\n\nC:\\Users\\MIMO\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\_pytest\\config\\__init__.py:1463: AttributeError\n\nThe above exception was the direct cause of the following exception:\n\nrequest = <SubRequest 'browser' for <Function test_LOGIN_AUTH_4>>\n\n    @pytest.fixture(scope=\"class\", autouse=True)\n    def browser(request):\n        \"\"\"\n        This function return the Browser value to setup method\n        \"\"\"\n>       return request.config.getoption(\"--browser\")\nE       ValueError: no option named '--browser'\n\ntestcase\\conftest.py:81: ValueError\n", "test_name": "test_LOGIN_AUTH_4", "rerun": "0"}}, "status": {"total_pass": 0, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 1}}, "7": {"suite_name": "testcase/Login/CAP/test_LOGIN_AUTH_5.py", "tests": {"0": {"status": "ERROR", "message": "self = <_pytest.config.Config object at 0x000001B31F42EAC0>, name = '--browser', default = <NOTSET>, skip = False\n\n    def getoption(self, name: str, default=notset, skip: bool = False):\n        \"\"\"Return command line option value.\n    \n        :param name: Name of the option.  You may also specify\n            the literal ``--OPT`` option instead of the \"dest\" option name.\n        :param default: Default value if no option of that name exists.\n        :param skip: If True, raise pytest.skip if option does not exists\n            or has a None value.\n        \"\"\"\n        name = self._opt2dest.get(name, name)\n        try:\n>           val = getattr(self.option, name)\nE           AttributeError: 'Namespace' object has no attribute '--browser'\n\nC:\\Users\\MIMO\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\_pytest\\config\\__init__.py:1463: AttributeError\n\nThe above exception was the direct cause of the following exception:\n\nrequest = <SubRequest 'browser' for <Function test_LOGIN_AUTH_5>>\n\n    @pytest.fixture(scope=\"class\", autouse=True)\n    def browser(request):\n        \"\"\"\n        This function return the Browser value to setup method\n        \"\"\"\n>       return request.config.getoption(\"--browser\")\nE       ValueError: no option named '--browser'\n\ntestcase\\conftest.py:81: ValueError\n", "test_name": "test_LOGIN_AUTH_5", "rerun": "0"}}, "status": {"total_pass": 0, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 1}}, "8": {"suite_name": "testcase/Login/CAP/test_LOGIN_AUTH_6.py", "tests": {"0": {"status": "ERROR", "message": "self = <_pytest.config.Config object at 0x000001B31F42EAC0>, name = '--browser', default = <NOTSET>, skip = False\n\n    def getoption(self, name: str, default=notset, skip: bool = False):\n        \"\"\"Return command line option value.\n    \n        :param name: Name of the option.  You may also specify\n            the literal ``--OPT`` option instead of the \"dest\" option name.\n        :param default: Default value if no option of that name exists.\n        :param skip: If True, raise pytest.skip if option does not exists\n            or has a None value.\n        \"\"\"\n        name = self._opt2dest.get(name, name)\n        try:\n>           val = getattr(self.option, name)\nE           AttributeError: 'Namespace' object has no attribute '--browser'\n\nC:\\Users\\MIMO\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\_pytest\\config\\__init__.py:1463: AttributeError\n\nThe above exception was the direct cause of the following exception:\n\nrequest = <SubRequest 'browser' for <Function test_LOGIN_AUTH_6>>\n\n    @pytest.fixture(scope=\"class\", autouse=True)\n    def browser(request):\n        \"\"\"\n        This function return the Browser value to setup method\n        \"\"\"\n>       return request.config.getoption(\"--browser\")\nE       ValueError: no option named '--browser'\n\ntestcase\\conftest.py:81: ValueError\n", "test_name": "test_LOGIN_AUTH_6", "rerun": "0"}}, "status": {"total_pass": 0, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 1}}, "9": {"suite_name": "testcase/Login/CAP/test_LOGIN_AUTH_7.py", "tests": {"0": {"status": "ERROR", "message": "self = <_pytest.config.Config object at 0x000001B31F42EAC0>, name = '--browser', default = <NOTSET>, skip = False\n\n    def getoption(self, name: str, default=notset, skip: bool = False):\n        \"\"\"Return command line option value.\n    \n        :param name: Name of the option.  You may also specify\n            the literal ``--OPT`` option instead of the \"dest\" option name.\n        :param default: Default value if no option of that name exists.\n        :param skip: If True, raise pytest.skip if option does not exists\n            or has a None value.\n        \"\"\"\n        name = self._opt2dest.get(name, name)\n        try:\n>           val = getattr(self.option, name)\nE           AttributeError: 'Namespace' object has no attribute '--browser'\n\nC:\\Users\\MIMO\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\_pytest\\config\\__init__.py:1463: AttributeError\n\nThe above exception was the direct cause of the following exception:\n\nrequest = <SubRequest 'browser' for <Function test_LOGIN_AUTH_7>>\n\n    @pytest.fixture(scope=\"class\", autouse=True)\n    def browser(request):\n        \"\"\"\n        This function return the Browser value to setup method\n        \"\"\"\n>       return request.config.getoption(\"--browser\")\nE       ValueError: no option named '--browser'\n\ntestcase\\conftest.py:81: ValueError\n", "test_name": "test_LOGIN_AUTH_7", "rerun": "0"}}, "status": {"total_pass": 0, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 1}}, "10": {"suite_name": "testcase/Login/CAP/test_LOGIN_AUTH_8.py", "tests": {"0": {"status": "ERROR", "message": "self = <_pytest.config.Config object at 0x000001B31F42EAC0>, name = '--browser', default = <NOTSET>, skip = False\n\n    def getoption(self, name: str, default=notset, skip: bool = False):\n        \"\"\"Return command line option value.\n    \n        :param name: Name of the option.  You may also specify\n            the literal ``--OPT`` option instead of the \"dest\" option name.\n        :param default: Default value if no option of that name exists.\n        :param skip: If True, raise pytest.skip if option does not exists\n            or has a None value.\n        \"\"\"\n        name = self._opt2dest.get(name, name)\n        try:\n>           val = getattr(self.option, name)\nE           AttributeError: 'Namespace' object has no attribute '--browser'\n\nC:\\Users\\MIMO\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\_pytest\\config\\__init__.py:1463: AttributeError\n\nThe above exception was the direct cause of the following exception:\n\nrequest = <SubRequest 'browser' for <Function test_LOGIN_AUTH_8>>\n\n    @pytest.fixture(scope=\"class\", autouse=True)\n    def browser(request):\n        \"\"\"\n        This function return the Browser value to setup method\n        \"\"\"\n>       return request.config.getoption(\"--browser\")\nE       ValueError: no option named '--browser'\n\ntestcase\\conftest.py:81: ValueError\n", "test_name": "test_LOGIN_AUTH_8", "rerun": "0"}}, "status": {"total_pass": 0, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 1}}, "11": {"suite_name": "testcase/Login/CAP/test_LOGIN_AUTH_9.py", "tests": {"0": {"status": "ERROR", "message": "self = <_pytest.config.Config object at 0x000001B31F42EAC0>, name = '--browser', default = <NOTSET>, skip = False\n\n    def getoption(self, name: str, default=notset, skip: bool = False):\n        \"\"\"Return command line option value.\n    \n        :param name: Name of the option.  You may also specify\n            the literal ``--OPT`` option instead of the \"dest\" option name.\n        :param default: Default value if no option of that name exists.\n        :param skip: If True, raise pytest.skip if option does not exists\n            or has a None value.\n        \"\"\"\n        name = self._opt2dest.get(name, name)\n        try:\n>           val = getattr(self.option, name)\nE           AttributeError: 'Namespace' object has no attribute '--browser'\n\nC:\\Users\\MIMO\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\_pytest\\config\\__init__.py:1463: AttributeError\n\nThe above exception was the direct cause of the following exception:\n\nrequest = <SubRequest 'browser' for <Function test_LOGIN_AUTH_9>>\n\n    @pytest.fixture(scope=\"class\", autouse=True)\n    def browser(request):\n        \"\"\"\n        This function return the Browser value to setup method\n        \"\"\"\n>       return request.config.getoption(\"--browser\")\nE       ValueError: no option named '--browser'\n\ntestcase\\conftest.py:81: ValueError\n", "test_name": "test_LOGIN_AUTH_9", "rerun": "0"}}, "status": {"total_pass": 0, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 1}}, "12": {"suite_name": "testcase/Login/CAP/test_LOGIN_COOKIE_1.py", "tests": {"0": {"status": "ERROR", "message": "self = <_pytest.config.Config object at 0x000001B31F42EAC0>, name = '--browser', default = <NOTSET>, skip = False\n\n    def getoption(self, name: str, default=notset, skip: bool = False):\n        \"\"\"Return command line option value.\n    \n        :param name: Name of the option.  You may also specify\n            the literal ``--OPT`` option instead of the \"dest\" option name.\n        :param default: Default value if no option of that name exists.\n        :param skip: If True, raise pytest.skip if option does not exists\n            or has a None value.\n        \"\"\"\n        name = self._opt2dest.get(name, name)\n        try:\n>           val = getattr(self.option, name)\nE           AttributeError: 'Namespace' object has no attribute '--browser'\n\nC:\\Users\\MIMO\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\_pytest\\config\\__init__.py:1463: AttributeError\n\nThe above exception was the direct cause of the following exception:\n\nrequest = <SubRequest 'browser' for <Function test_LOGIN_COOKIE_1>>\n\n    @pytest.fixture(scope=\"class\", autouse=True)\n    def browser(request):\n        \"\"\"\n        This function return the Browser value to setup method\n        \"\"\"\n>       return request.config.getoption(\"--browser\")\nE       ValueError: no option named '--browser'\n\ntestcase\\conftest.py:81: ValueError\n", "test_name": "test_LOGIN_COOKIE_1", "rerun": "0"}}, "status": {"total_pass": 0, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 1}}, "13": {"suite_name": "testcase/Login/CAP/test_LOGIN_COOKIE_2.py", "tests": {"0": {"status": "ERROR", "message": "self = <_pytest.config.Config object at 0x000001B31F42EAC0>, name = '--browser', default = <NOTSET>, skip = False\n\n    def getoption(self, name: str, default=notset, skip: bool = False):\n        \"\"\"Return command line option value.\n    \n        :param name: Name of the option.  You may also specify\n            the literal ``--OPT`` option instead of the \"dest\" option name.\n        :param default: Default value if no option of that name exists.\n        :param skip: If True, raise pytest.skip if option does not exists\n            or has a None value.\n        \"\"\"\n        name = self._opt2dest.get(name, name)\n        try:\n>           val = getattr(self.option, name)\nE           AttributeError: 'Namespace' object has no attribute '--browser'\n\nC:\\Users\\MIMO\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\_pytest\\config\\__init__.py:1463: AttributeError\n\nThe above exception was the direct cause of the following exception:\n\nrequest = <SubRequest 'browser' for <Function test_LOGIN_COOKIE_2>>\n\n    @pytest.fixture(scope=\"class\", autouse=True)\n    def browser(request):\n        \"\"\"\n        This function return the Browser value to setup method\n        \"\"\"\n>       return request.config.getoption(\"--browser\")\nE       ValueError: no option named '--browser'\n\ntestcase\\conftest.py:81: ValueError\n", "test_name": "test_LOGIN_COOKIE_2", "rerun": "0"}}, "status": {"total_pass": 0, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 1}}, "14": {"suite_name": "testcase/Login/CAP/test_LOGIN_COOKIE_3.py", "tests": {"0": {"status": "ERROR", "message": "self = <_pytest.config.Config object at 0x000001B31F42EAC0>, name = '--browser', default = <NOTSET>, skip = False\n\n    def getoption(self, name: str, default=notset, skip: bool = False):\n        \"\"\"Return command line option value.\n    \n        :param name: Name of the option.  You may also specify\n            the literal ``--OPT`` option instead of the \"dest\" option name.\n        :param default: Default value if no option of that name exists.\n        :param skip: If True, raise pytest.skip if option does not exists\n            or has a None value.\n        \"\"\"\n        name = self._opt2dest.get(name, name)\n        try:\n>           val = getattr(self.option, name)\nE           AttributeError: 'Namespace' object has no attribute '--browser'\n\nC:\\Users\\MIMO\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\_pytest\\config\\__init__.py:1463: AttributeError\n\nThe above exception was the direct cause of the following exception:\n\nrequest = <SubRequest 'browser' for <Function test_LOGIN_COOKIE_4>>\n\n    @pytest.fixture(scope=\"class\", autouse=True)\n    def browser(request):\n        \"\"\"\n        This function return the Browser value to setup method\n        \"\"\"\n>       return request.config.getoption(\"--browser\")\nE       ValueError: no option named '--browser'\n\ntestcase\\conftest.py:81: ValueError\n", "test_name": "test_LOGIN_COOKIE_4", "rerun": "0"}}, "status": {"total_pass": 0, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 1}}, "15": {"suite_name": "testcase/Login/CAP/test_LOGIN_COOKIE_4.py", "tests": {"0": {"status": "ERROR", "message": "self = <_pytest.config.Config object at 0x000001B31F42EAC0>, name = '--browser', default = <NOTSET>, skip = False\n\n    def getoption(self, name: str, default=notset, skip: bool = False):\n        \"\"\"Return command line option value.\n    \n        :param name: Name of the option.  You may also specify\n            the literal ``--OPT`` option instead of the \"dest\" option name.\n        :param default: Default value if no option of that name exists.\n        :param skip: If True, raise pytest.skip if option does not exists\n            or has a None value.\n        \"\"\"\n        name = self._opt2dest.get(name, name)\n        try:\n>           val = getattr(self.option, name)\nE           AttributeError: 'Namespace' object has no attribute '--browser'\n\nC:\\Users\\MIMO\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\_pytest\\config\\__init__.py:1463: AttributeError\n\nThe above exception was the direct cause of the following exception:\n\nrequest = <SubRequest 'browser' for <Function test_LOGIN_COOKIE_3>>\n\n    @pytest.fixture(scope=\"class\", autouse=True)\n    def browser(request):\n        \"\"\"\n        This function return the Browser value to setup method\n        \"\"\"\n>       return request.config.getoption(\"--browser\")\nE       ValueError: no option named '--browser'\n\ntestcase\\conftest.py:81: ValueError\n", "test_name": "test_LOGIN_COOKIE_3", "rerun": "0"}}, "status": {"total_pass": 0, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 1}}, "16": {"suite_name": "testcase/Login/CAP/test_LOGIN_COOKIE_5.py", "tests": {"0": {"status": "ERROR", "message": "self = <_pytest.config.Config object at 0x000001B31F42EAC0>, name = '--browser', default = <NOTSET>, skip = False\n\n    def getoption(self, name: str, default=notset, skip: bool = False):\n        \"\"\"Return command line option value.\n    \n        :param name: Name of the option.  You may also specify\n            the literal ``--OPT`` option instead of the \"dest\" option name.\n        :param default: Default value if no option of that name exists.\n        :param skip: If True, raise pytest.skip if option does not exists\n            or has a None value.\n        \"\"\"\n        name = self._opt2dest.get(name, name)\n        try:\n>           val = getattr(self.option, name)\nE           AttributeError: 'Namespace' object has no attribute '--browser'\n\nC:\\Users\\MIMO\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\_pytest\\config\\__init__.py:1463: AttributeError\n\nThe above exception was the direct cause of the following exception:\n\nrequest = <SubRequest 'browser' for <Function test_LOGIN_COOKIE_3>>\n\n    @pytest.fixture(scope=\"class\", autouse=True)\n    def browser(request):\n        \"\"\"\n        This function return the Browser value to setup method\n        \"\"\"\n>       return request.config.getoption(\"--browser\")\nE       ValueError: no option named '--browser'\n\ntestcase\\conftest.py:81: ValueError\n", "test_name": "test_LOGIN_COOKIE_3", "rerun": "0"}}, "status": {"total_pass": 0, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 1}}, "17": {"suite_name": "testcase/Login/CAP/test_LOGIN_HSIS_1.py", "tests": {"0": {"status": "ERROR", "message": "self = <_pytest.config.Config object at 0x000001B31F42EAC0>, name = '--browser', default = <NOTSET>, skip = False\n\n    def getoption(self, name: str, default=notset, skip: bool = False):\n        \"\"\"Return command line option value.\n    \n        :param name: Name of the option.  You may also specify\n            the literal ``--OPT`` option instead of the \"dest\" option name.\n        :param default: Default value if no option of that name exists.\n        :param skip: If True, raise pytest.skip if option does not exists\n            or has a None value.\n        \"\"\"\n        name = self._opt2dest.get(name, name)\n        try:\n>           val = getattr(self.option, name)\nE           AttributeError: 'Namespace' object has no attribute '--browser'\n\nC:\\Users\\MIMO\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\_pytest\\config\\__init__.py:1463: AttributeError\n\nThe above exception was the direct cause of the following exception:\n\nrequest = <SubRequest 'browser' for <Function test_LOGIN_SES_1>>\n\n    @pytest.fixture(scope=\"class\", autouse=True)\n    def browser(request):\n        \"\"\"\n        This function return the Browser value to setup method\n        \"\"\"\n>       return request.config.getoption(\"--browser\")\nE       ValueError: no option named '--browser'\n\ntestcase\\conftest.py:81: ValueError\n", "test_name": "test_LOGIN_SES_1", "rerun": "0"}}, "status": {"total_pass": 0, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 1}}, "18": {"suite_name": "testcase/Login/CAP/test_LOGIN_HSIS_2.py", "tests": {"0": {"status": "ERROR", "message": "self = <_pytest.config.Config object at 0x000001B31F42EAC0>, name = '--browser', default = <NOTSET>, skip = False\n\n    def getoption(self, name: str, default=notset, skip: bool = False):\n        \"\"\"Return command line option value.\n    \n        :param name: Name of the option.  You may also specify\n            the literal ``--OPT`` option instead of the \"dest\" option name.\n        :param default: Default value if no option of that name exists.\n        :param skip: If True, raise pytest.skip if option does not exists\n            or has a None value.\n        \"\"\"\n        name = self._opt2dest.get(name, name)\n        try:\n>           val = getattr(self.option, name)\nE           AttributeError: 'Namespace' object has no attribute '--browser'\n\nC:\\Users\\MIMO\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\_pytest\\config\\__init__.py:1463: AttributeError\n\nThe above exception was the direct cause of the following exception:\n\nrequest = <SubRequest 'browser' for <Function test_LOGIN_SES_1>>\n\n    @pytest.fixture(scope=\"class\", autouse=True)\n    def browser(request):\n        \"\"\"\n        This function return the Browser value to setup method\n        \"\"\"\n>       return request.config.getoption(\"--browser\")\nE       ValueError: no option named '--browser'\n\ntestcase\\conftest.py:81: ValueError\n", "test_name": "test_LOGIN_SES_1", "rerun": "0"}}, "status": {"total_pass": 0, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 1}}, "19": {"suite_name": "testcase/Login/CAP/test_LOGIN_MD5_1.py", "tests": {"0": {"status": "ERROR", "message": "self = <_pytest.config.Config object at 0x000001B31F42EAC0>, name = '--browser', default = <NOTSET>, skip = False\n\n    def getoption(self, name: str, default=notset, skip: bool = False):\n        \"\"\"Return command line option value.\n    \n        :param name: Name of the option.  You may also specify\n            the literal ``--OPT`` option instead of the \"dest\" option name.\n        :param default: Default value if no option of that name exists.\n        :param skip: If True, raise pytest.skip if option does not exists\n            or has a None value.\n        \"\"\"\n        name = self._opt2dest.get(name, name)\n        try:\n>           val = getattr(self.option, name)\nE           AttributeError: 'Namespace' object has no attribute '--browser'\n\nC:\\Users\\MIMO\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\_pytest\\config\\__init__.py:1463: AttributeError\n\nThe above exception was the direct cause of the following exception:\n\nrequest = <SubRequest 'browser' for <Function test_LOGIN_MD5_1>>\n\n    @pytest.fixture(scope=\"class\", autouse=True)\n    def browser(request):\n        \"\"\"\n        This function return the Browser value to setup method\n        \"\"\"\n>       return request.config.getoption(\"--browser\")\nE       ValueError: no option named '--browser'\n\ntestcase\\conftest.py:81: ValueError\n", "test_name": "test_LOGIN_MD5_1", "rerun": "0"}}, "status": {"total_pass": 0, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 1}}, "20": {"suite_name": "testcase/Login/CAP/test_LOGIN_MD5_2.py", "tests": {"0": {"status": "ERROR", "message": "self = <_pytest.config.Config object at 0x000001B31F42EAC0>, name = '--browser', default = <NOTSET>, skip = False\n\n    def getoption(self, name: str, default=notset, skip: bool = False):\n        \"\"\"Return command line option value.\n    \n        :param name: Name of the option.  You may also specify\n            the literal ``--OPT`` option instead of the \"dest\" option name.\n        :param default: Default value if no option of that name exists.\n        :param skip: If True, raise pytest.skip if option does not exists\n            or has a None value.\n        \"\"\"\n        name = self._opt2dest.get(name, name)\n        try:\n>           val = getattr(self.option, name)\nE           AttributeError: 'Namespace' object has no attribute '--browser'\n\nC:\\Users\\MIMO\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\_pytest\\config\\__init__.py:1463: AttributeError\n\nThe above exception was the direct cause of the following exception:\n\nrequest = <SubRequest 'browser' for <Function test_LOGIN_MD5_2>>\n\n    @pytest.fixture(scope=\"class\", autouse=True)\n    def browser(request):\n        \"\"\"\n        This function return the Browser value to setup method\n        \"\"\"\n>       return request.config.getoption(\"--browser\")\nE       ValueError: no option named '--browser'\n\ntestcase\\conftest.py:81: ValueError\n", "test_name": "test_LOGIN_MD5_2", "rerun": "0"}}, "status": {"total_pass": 0, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 1}}, "21": {"suite_name": "testcase/Login/CAP/test_LOGIN_MD5_3.py", "tests": {"0": {"status": "ERROR", "message": "self = <_pytest.config.Config object at 0x000001B31F42EAC0>, name = '--browser', default = <NOTSET>, skip = False\n\n    def getoption(self, name: str, default=notset, skip: bool = False):\n        \"\"\"Return command line option value.\n    \n        :param name: Name of the option.  You may also specify\n            the literal ``--OPT`` option instead of the \"dest\" option name.\n        :param default: Default value if no option of that name exists.\n        :param skip: If True, raise pytest.skip if option does not exists\n            or has a None value.\n        \"\"\"\n        name = self._opt2dest.get(name, name)\n        try:\n>           val = getattr(self.option, name)\nE           AttributeError: 'Namespace' object has no attribute '--browser'\n\nC:\\Users\\MIMO\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\_pytest\\config\\__init__.py:1463: AttributeError\n\nThe above exception was the direct cause of the following exception:\n\nrequest = <SubRequest 'browser' for <Function test_LOGIN_MD5_3>>\n\n    @pytest.fixture(scope=\"class\", autouse=True)\n    def browser(request):\n        \"\"\"\n        This function return the Browser value to setup method\n        \"\"\"\n>       return request.config.getoption(\"--browser\")\nE       ValueError: no option named '--browser'\n\ntestcase\\conftest.py:81: ValueError\n", "test_name": "test_LOGIN_MD5_3", "rerun": "0"}}, "status": {"total_pass": 0, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 1}}, "22": {"suite_name": "testcase/Login/CAP/test_LOGIN_MD5_4.py", "tests": {"0": {"status": "ERROR", "message": "self = <_pytest.config.Config object at 0x000001B31F42EAC0>, name = '--browser', default = <NOTSET>, skip = False\n\n    def getoption(self, name: str, default=notset, skip: bool = False):\n        \"\"\"Return command line option value.\n    \n        :param name: Name of the option.  You may also specify\n            the literal ``--OPT`` option instead of the \"dest\" option name.\n        :param default: Default value if no option of that name exists.\n        :param skip: If True, raise pytest.skip if option does not exists\n            or has a None value.\n        \"\"\"\n        name = self._opt2dest.get(name, name)\n        try:\n>           val = getattr(self.option, name)\nE           AttributeError: 'Namespace' object has no attribute '--browser'\n\nC:\\Users\\MIMO\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\_pytest\\config\\__init__.py:1463: AttributeError\n\nThe above exception was the direct cause of the following exception:\n\nrequest = <SubRequest 'browser' for <Function test_LOGIN_MD5_4>>\n\n    @pytest.fixture(scope=\"class\", autouse=True)\n    def browser(request):\n        \"\"\"\n        This function return the Browser value to setup method\n        \"\"\"\n>       return request.config.getoption(\"--browser\")\nE       ValueError: no option named '--browser'\n\ntestcase\\conftest.py:81: ValueError\n", "test_name": "test_LOGIN_MD5_4", "rerun": "0"}}, "status": {"total_pass": 0, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 1}}, "23": {"suite_name": "testcase/Login/CAP/test_LOGIN_MD5_5.py", "tests": {"0": {"status": "ERROR", "message": "self = <_pytest.config.Config object at 0x000001B31F42EAC0>, name = '--browser', default = <NOTSET>, skip = False\n\n    def getoption(self, name: str, default=notset, skip: bool = False):\n        \"\"\"Return command line option value.\n    \n        :param name: Name of the option.  You may also specify\n            the literal ``--OPT`` option instead of the \"dest\" option name.\n        :param default: Default value if no option of that name exists.\n        :param skip: If True, raise pytest.skip if option does not exists\n            or has a None value.\n        \"\"\"\n        name = self._opt2dest.get(name, name)\n        try:\n>           val = getattr(self.option, name)\nE           AttributeError: 'Namespace' object has no attribute '--browser'\n\nC:\\Users\\MIMO\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\_pytest\\config\\__init__.py:1463: AttributeError\n\nThe above exception was the direct cause of the following exception:\n\nrequest = <SubRequest 'browser' for <Function test_LOGIN_MD5_5>>\n\n    @pytest.fixture(scope=\"class\", autouse=True)\n    def browser(request):\n        \"\"\"\n        This function return the Browser value to setup method\n        \"\"\"\n>       return request.config.getoption(\"--browser\")\nE       ValueError: no option named '--browser'\n\ntestcase\\conftest.py:81: ValueError\n", "test_name": "test_LOGIN_MD5_5", "rerun": "0"}}, "status": {"total_pass": 0, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 1}}, "24": {"suite_name": "testcase/Login/CAP/test_LOGIN_MD5_6.py", "tests": {"0": {"status": "ERROR", "message": "self = <_pytest.config.Config object at 0x000001B31F42EAC0>, name = '--browser', default = <NOTSET>, skip = False\n\n    def getoption(self, name: str, default=notset, skip: bool = False):\n        \"\"\"Return command line option value.\n    \n        :param name: Name of the option.  You may also specify\n            the literal ``--OPT`` option instead of the \"dest\" option name.\n        :param default: Default value if no option of that name exists.\n        :param skip: If True, raise pytest.skip if option does not exists\n            or has a None value.\n        \"\"\"\n        name = self._opt2dest.get(name, name)\n        try:\n>           val = getattr(self.option, name)\nE           AttributeError: 'Namespace' object has no attribute '--browser'\n\nC:\\Users\\MIMO\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\_pytest\\config\\__init__.py:1463: AttributeError\n\nThe above exception was the direct cause of the following exception:\n\nrequest = <SubRequest 'browser' for <Function test_LOGIN_MD5_6>>\n\n    @pytest.fixture(scope=\"class\", autouse=True)\n    def browser(request):\n        \"\"\"\n        This function return the Browser value to setup method\n        \"\"\"\n>       return request.config.getoption(\"--browser\")\nE       ValueError: no option named '--browser'\n\ntestcase\\conftest.py:81: ValueError\n", "test_name": "test_LOGIN_MD5_6", "rerun": "0"}}, "status": {"total_pass": 0, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 1}}, "25": {"suite_name": "testcase/Login/CAP/test_LOGIN_MD5_7.py", "tests": {"0": {"status": "ERROR", "message": "self = <_pytest.config.Config object at 0x000001B31F42EAC0>, name = '--browser', default = <NOTSET>, skip = False\n\n    def getoption(self, name: str, default=notset, skip: bool = False):\n        \"\"\"Return command line option value.\n    \n        :param name: Name of the option.  You may also specify\n            the literal ``--OPT`` option instead of the \"dest\" option name.\n        :param default: Default value if no option of that name exists.\n        :param skip: If True, raise pytest.skip if option does not exists\n            or has a None value.\n        \"\"\"\n        name = self._opt2dest.get(name, name)\n        try:\n>           val = getattr(self.option, name)\nE           AttributeError: 'Namespace' object has no attribute '--browser'\n\nC:\\Users\\MIMO\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\_pytest\\config\\__init__.py:1463: AttributeError\n\nThe above exception was the direct cause of the following exception:\n\nrequest = <SubRequest 'browser' for <Function test_LOGIN_MD5_7>>\n\n    @pytest.fixture(scope=\"class\", autouse=True)\n    def browser(request):\n        \"\"\"\n        This function return the Browser value to setup method\n        \"\"\"\n>       return request.config.getoption(\"--browser\")\nE       ValueError: no option named '--browser'\n\ntestcase\\conftest.py:81: ValueError\n", "test_name": "test_LOGIN_MD5_7", "rerun": "0"}}, "status": {"total_pass": 0, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 1}}, "26": {"suite_name": "testcase/Login/CAP/test_LOGIN_MD5_8.py", "tests": {"0": {"status": "ERROR", "message": "self = <_pytest.config.Config object at 0x000001B31F42EAC0>, name = '--browser', default = <NOTSET>, skip = False\n\n    def getoption(self, name: str, default=notset, skip: bool = False):\n        \"\"\"Return command line option value.\n    \n        :param name: Name of the option.  You may also specify\n            the literal ``--OPT`` option instead of the \"dest\" option name.\n        :param default: Default value if no option of that name exists.\n        :param skip: If True, raise pytest.skip if option does not exists\n            or has a None value.\n        \"\"\"\n        name = self._opt2dest.get(name, name)\n        try:\n>           val = getattr(self.option, name)\nE           AttributeError: 'Namespace' object has no attribute '--browser'\n\nC:\\Users\\MIMO\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\_pytest\\config\\__init__.py:1463: AttributeError\n\nThe above exception was the direct cause of the following exception:\n\nrequest = <SubRequest 'browser' for <Function test_LOGIN_MD5_8>>\n\n    @pytest.fixture(scope=\"class\", autouse=True)\n    def browser(request):\n        \"\"\"\n        This function return the Browser value to setup method\n        \"\"\"\n>       return request.config.getoption(\"--browser\")\nE       ValueError: no option named '--browser'\n\ntestcase\\conftest.py:81: ValueError\n", "test_name": "test_LOGIN_MD5_8", "rerun": "0"}}, "status": {"total_pass": 0, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 1}}, "27": {"suite_name": "testcase/Login/CAP/test_LOGIN_MD5_9.py", "tests": {"0": {"status": "ERROR", "message": "self = <_pytest.config.Config object at 0x000001B31F42EAC0>, name = '--browser', default = <NOTSET>, skip = False\n\n    def getoption(self, name: str, default=notset, skip: bool = False):\n        \"\"\"Return command line option value.\n    \n        :param name: Name of the option.  You may also specify\n            the literal ``--OPT`` option instead of the \"dest\" option name.\n        :param default: Default value if no option of that name exists.\n        :param skip: If True, raise pytest.skip if option does not exists\n            or has a None value.\n        \"\"\"\n        name = self._opt2dest.get(name, name)\n        try:\n>           val = getattr(self.option, name)\nE           AttributeError: 'Namespace' object has no attribute '--browser'\n\nC:\\Users\\MIMO\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\_pytest\\config\\__init__.py:1463: AttributeError\n\nThe above exception was the direct cause of the following exception:\n\nrequest = <SubRequest 'browser' for <Function test_LOGIN_MD5_9>>\n\n    @pytest.fixture(scope=\"class\", autouse=True)\n    def browser(request):\n        \"\"\"\n        This function return the Browser value to setup method\n        \"\"\"\n>       return request.config.getoption(\"--browser\")\nE       ValueError: no option named '--browser'\n\ntestcase\\conftest.py:81: ValueError\n", "test_name": "test_LOGIN_MD5_9", "rerun": "0"}}, "status": {"total_pass": 0, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 1}}, "28": {"suite_name": "testcase/Login/CAP/test_LOGIN_Mesh_Only_Not_Kill_Agent.py", "tests": {"0": {"status": "ERROR", "message": "self = <_pytest.config.Config object at 0x000001B31F42EAC0>, name = '--browser', default = <NOTSET>, skip = False\n\n    def getoption(self, name: str, default=notset, skip: bool = False):\n        \"\"\"Return command line option value.\n    \n        :param name: Name of the option.  You may also specify\n            the literal ``--OPT`` option instead of the \"dest\" option name.\n        :param default: Default value if no option of that name exists.\n        :param skip: If True, raise pytest.skip if option does not exists\n            or has a None value.\n        \"\"\"\n        name = self._opt2dest.get(name, name)\n        try:\n>           val = getattr(self.option, name)\nE           AttributeError: 'Namespace' object has no attribute '--browser'\n\nC:\\Users\\MIMO\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\_pytest\\config\\__init__.py:1463: AttributeError\n\nThe above exception was the direct cause of the following exception:\n\nrequest = <SubRequest 'browser' for <Function test_OPEN_MESH_ONLY>>\n\n    @pytest.fixture(scope=\"class\", autouse=True)\n    def browser(request):\n        \"\"\"\n        This function return the Browser value to setup method\n        \"\"\"\n>       return request.config.getoption(\"--browser\")\nE       ValueError: no option named '--browser'\n\ntestcase\\conftest.py:81: ValueError\n", "test_name": "test_OPEN_MESH_ONLY", "rerun": "0"}}, "status": {"total_pass": 0, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 1}}, "29": {"suite_name": "testcase/Login/CAP/test_LOGIN_RES_1.py", "tests": {"0": {"status": "ERROR", "message": "self = <_pytest.config.Config object at 0x000001B31F42EAC0>, name = '--browser', default = <NOTSET>, skip = False\n\n    def getoption(self, name: str, default=notset, skip: bool = False):\n        \"\"\"Return command line option value.\n    \n        :param name: Name of the option.  You may also specify\n            the literal ``--OPT`` option instead of the \"dest\" option name.\n        :param default: Default value if no option of that name exists.\n        :param skip: If True, raise pytest.skip if option does not exists\n            or has a None value.\n        \"\"\"\n        name = self._opt2dest.get(name, name)\n        try:\n>           val = getattr(self.option, name)\nE           AttributeError: 'Namespace' object has no attribute '--browser'\n\nC:\\Users\\MIMO\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\_pytest\\config\\__init__.py:1463: AttributeError\n\nThe above exception was the direct cause of the following exception:\n\nrequest = <SubRequest 'browser' for <Function test_LOGIN_SES_1>>\n\n    @pytest.fixture(scope=\"class\", autouse=True)\n    def browser(request):\n        \"\"\"\n        This function return the Browser value to setup method\n        \"\"\"\n>       return request.config.getoption(\"--browser\")\nE       ValueError: no option named '--browser'\n\ntestcase\\conftest.py:81: ValueError\n", "test_name": "test_LOGIN_SES_1", "rerun": "0"}}, "status": {"total_pass": 0, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 1}}, "30": {"suite_name": "testcase/Login/CAP/test_LOGIN_RES_2.py", "tests": {"0": {"status": "ERROR", "message": "self = <_pytest.config.Config object at 0x000001B31F42EAC0>, name = '--browser', default = <NOTSET>, skip = False\n\n    def getoption(self, name: str, default=notset, skip: bool = False):\n        \"\"\"Return command line option value.\n    \n        :param name: Name of the option.  You may also specify\n            the literal ``--OPT`` option instead of the \"dest\" option name.\n        :param default: Default value if no option of that name exists.\n        :param skip: If True, raise pytest.skip if option does not exists\n            or has a None value.\n        \"\"\"\n        name = self._opt2dest.get(name, name)\n        try:\n>           val = getattr(self.option, name)\nE           AttributeError: 'Namespace' object has no attribute '--browser'\n\nC:\\Users\\MIMO\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\_pytest\\config\\__init__.py:1463: AttributeError\n\nThe above exception was the direct cause of the following exception:\n\nrequest = <SubRequest 'browser' for <Function test_LOGIN_SES_1>>\n\n    @pytest.fixture(scope=\"class\", autouse=True)\n    def browser(request):\n        \"\"\"\n        This function return the Browser value to setup method\n        \"\"\"\n>       return request.config.getoption(\"--browser\")\nE       ValueError: no option named '--browser'\n\ntestcase\\conftest.py:81: ValueError\n", "test_name": "test_LOGIN_SES_1", "rerun": "0"}}, "status": {"total_pass": 0, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 1}}, "31": {"suite_name": "testcase/Login/CAP/test_LOGIN_RES_3.py", "tests": {"0": {"status": "ERROR", "message": "self = <_pytest.config.Config object at 0x000001B31F42EAC0>, name = '--browser', default = <NOTSET>, skip = False\n\n    def getoption(self, name: str, default=notset, skip: bool = False):\n        \"\"\"Return command line option value.\n    \n        :param name: Name of the option.  You may also specify\n            the literal ``--OPT`` option instead of the \"dest\" option name.\n        :param default: Default value if no option of that name exists.\n        :param skip: If True, raise pytest.skip if option does not exists\n            or has a None value.\n        \"\"\"\n        name = self._opt2dest.get(name, name)\n        try:\n>           val = getattr(self.option, name)\nE           AttributeError: 'Namespace' object has no attribute '--browser'\n\nC:\\Users\\MIMO\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\_pytest\\config\\__init__.py:1463: AttributeError\n\nThe above exception was the direct cause of the following exception:\n\nrequest = <SubRequest 'browser' for <Function test_LOGIN_SES_1>>\n\n    @pytest.fixture(scope=\"class\", autouse=True)\n    def browser(request):\n        \"\"\"\n        This function return the Browser value to setup method\n        \"\"\"\n>       return request.config.getoption(\"--browser\")\nE       ValueError: no option named '--browser'\n\ntestcase\\conftest.py:81: ValueError\n", "test_name": "test_LOGIN_SES_1", "rerun": "0"}}, "status": {"total_pass": 0, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 1}}, "32": {"suite_name": "testcase/Login/CAP/test_LOGIN_SES_1.py", "tests": {"0": {"status": "ERROR", "message": "self = <_pytest.config.Config object at 0x000001B31F42EAC0>, name = '--browser', default = <NOTSET>, skip = False\n\n    def getoption(self, name: str, default=notset, skip: bool = False):\n        \"\"\"Return command line option value.\n    \n        :param name: Name of the option.  You may also specify\n            the literal ``--OPT`` option instead of the \"dest\" option name.\n        :param default: Default value if no option of that name exists.\n        :param skip: If True, raise pytest.skip if option does not exists\n            or has a None value.\n        \"\"\"\n        name = self._opt2dest.get(name, name)\n        try:\n>           val = getattr(self.option, name)\nE           AttributeError: 'Namespace' object has no attribute '--browser'\n\nC:\\Users\\MIMO\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\_pytest\\config\\__init__.py:1463: AttributeError\n\nThe above exception was the direct cause of the following exception:\n\nrequest = <SubRequest 'browser' for <Function test_LOGIN_SES_1>>\n\n    @pytest.fixture(scope=\"class\", autouse=True)\n    def browser(request):\n        \"\"\"\n        This function return the Browser value to setup method\n        \"\"\"\n>       return request.config.getoption(\"--browser\")\nE       ValueError: no option named '--browser'\n\ntestcase\\conftest.py:81: ValueError\n", "test_name": "test_LOGIN_SES_1", "rerun": "0"}}, "status": {"total_pass": 0, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 1}}, "33": {"suite_name": "testcase/Login/CAP/test_LOGIN_SES_2.py", "tests": {"0": {"status": "ERROR", "message": "self = <_pytest.config.Config object at 0x000001B31F42EAC0>, name = '--browser', default = <NOTSET>, skip = False\n\n    def getoption(self, name: str, default=notset, skip: bool = False):\n        \"\"\"Return command line option value.\n    \n        :param name: Name of the option.  You may also specify\n            the literal ``--OPT`` option instead of the \"dest\" option name.\n        :param default: Default value if no option of that name exists.\n        :param skip: If True, raise pytest.skip if option does not exists\n            or has a None value.\n        \"\"\"\n        name = self._opt2dest.get(name, name)\n        try:\n>           val = getattr(self.option, name)\nE           AttributeError: 'Namespace' object has no attribute '--browser'\n\nC:\\Users\\MIMO\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\_pytest\\config\\__init__.py:1463: AttributeError\n\nThe above exception was the direct cause of the following exception:\n\nrequest = <SubRequest 'browser' for <Function test_LOGIN_SES_2>>\n\n    @pytest.fixture(scope=\"class\", autouse=True)\n    def browser(request):\n        \"\"\"\n        This function return the Browser value to setup method\n        \"\"\"\n>       return request.config.getoption(\"--browser\")\nE       ValueError: no option named '--browser'\n\ntestcase\\conftest.py:81: ValueError\n", "test_name": "test_LOGIN_SES_2", "rerun": "0"}}, "status": {"total_pass": 0, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 1}}, "34": {"suite_name": "testcase/Login/CAP/test_LOGIN_SES_3.py", "tests": {"0": {"status": "ERROR", "message": "self = <_pytest.config.Config object at 0x000001B31F42EAC0>, name = '--browser', default = <NOTSET>, skip = False\n\n    def getoption(self, name: str, default=notset, skip: bool = False):\n        \"\"\"Return command line option value.\n    \n        :param name: Name of the option.  You may also specify\n            the literal ``--OPT`` option instead of the \"dest\" option name.\n        :param default: Default value if no option of that name exists.\n        :param skip: If True, raise pytest.skip if option does not exists\n            or has a None value.\n        \"\"\"\n        name = self._opt2dest.get(name, name)\n        try:\n>           val = getattr(self.option, name)\nE           AttributeError: 'Namespace' object has no attribute '--browser'\n\nC:\\Users\\MIMO\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\_pytest\\config\\__init__.py:1463: AttributeError\n\nThe above exception was the direct cause of the following exception:\n\nrequest = <SubRequest 'browser' for <Function test_LOGIN_SES_3>>\n\n    @pytest.fixture(scope=\"class\", autouse=True)\n    def browser(request):\n        \"\"\"\n        This function return the Browser value to setup method\n        \"\"\"\n>       return request.config.getoption(\"--browser\")\nE       ValueError: no option named '--browser'\n\ntestcase\\conftest.py:81: ValueError\n", "test_name": "test_LOGIN_SES_3", "rerun": "0"}}, "status": {"total_pass": 0, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 1}}, "35": {"suite_name": "testcase/Login/CAP/test_LOGIN_SES_4.py", "tests": {"0": {"status": "ERROR", "message": "self = <_pytest.config.Config object at 0x000001B31F42EAC0>, name = '--browser', default = <NOTSET>, skip = False\n\n    def getoption(self, name: str, default=notset, skip: bool = False):\n        \"\"\"Return command line option value.\n    \n        :param name: Name of the option.  You may also specify\n            the literal ``--OPT`` option instead of the \"dest\" option name.\n        :param default: Default value if no option of that name exists.\n        :param skip: If True, raise pytest.skip if option does not exists\n            or has a None value.\n        \"\"\"\n        name = self._opt2dest.get(name, name)\n        try:\n>           val = getattr(self.option, name)\nE           AttributeError: 'Namespace' object has no attribute '--browser'\n\nC:\\Users\\MIMO\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\_pytest\\config\\__init__.py:1463: AttributeError\n\nThe above exception was the direct cause of the following exception:\n\nrequest = <SubRequest 'browser' for <Function test_LOGIN_SES_4>>\n\n    @pytest.fixture(scope=\"class\", autouse=True)\n    def browser(request):\n        \"\"\"\n        This function return the Browser value to setup method\n        \"\"\"\n>       return request.config.getoption(\"--browser\")\nE       ValueError: no option named '--browser'\n\ntestcase\\conftest.py:81: ValueError\n", "test_name": "test_LOGIN_SES_4", "rerun": "0"}}, "status": {"total_pass": 0, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 1}}, "36": {"suite_name": "testcase/Login/CAP/test_LOGIN_SES_5.py", "tests": {"0": {"status": "ERROR", "message": "self = <_pytest.config.Config object at 0x000001B31F42EAC0>, name = '--browser', default = <NOTSET>, skip = False\n\n    def getoption(self, name: str, default=notset, skip: bool = False):\n        \"\"\"Return command line option value.\n    \n        :param name: Name of the option.  You may also specify\n            the literal ``--OPT`` option instead of the \"dest\" option name.\n        :param default: Default value if no option of that name exists.\n        :param skip: If True, raise pytest.skip if option does not exists\n            or has a None value.\n        \"\"\"\n        name = self._opt2dest.get(name, name)\n        try:\n>           val = getattr(self.option, name)\nE           AttributeError: 'Namespace' object has no attribute '--browser'\n\nC:\\Users\\MIMO\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\_pytest\\config\\__init__.py:1463: AttributeError\n\nThe above exception was the direct cause of the following exception:\n\nrequest = <SubRequest 'browser' for <Function test_LOGIN_SES_5>>\n\n    @pytest.fixture(scope=\"class\", autouse=True)\n    def browser(request):\n        \"\"\"\n        This function return the Browser value to setup method\n        \"\"\"\n>       return request.config.getoption(\"--browser\")\nE       ValueError: no option named '--browser'\n\ntestcase\\conftest.py:81: ValueError\n", "test_name": "test_LOGIN_SES_5", "rerun": "0"}}, "status": {"total_pass": 0, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 1}}, "37": {"suite_name": "testcase/Login/CAP/test_LOGIN_SES_6.py", "tests": {"0": {"status": "ERROR", "message": "self = <_pytest.config.Config object at 0x000001B31F42EAC0>, name = '--browser', default = <NOTSET>, skip = False\n\n    def getoption(self, name: str, default=notset, skip: bool = False):\n        \"\"\"Return command line option value.\n    \n        :param name: Name of the option.  You may also specify\n            the literal ``--OPT`` option instead of the \"dest\" option name.\n        :param default: Default value if no option of that name exists.\n        :param skip: If True, raise pytest.skip if option does not exists\n            or has a None value.\n        \"\"\"\n        name = self._opt2dest.get(name, name)\n        try:\n>           val = getattr(self.option, name)\nE           AttributeError: 'Namespace' object has no attribute '--browser'\n\nC:\\Users\\MIMO\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\_pytest\\config\\__init__.py:1463: AttributeError\n\nThe above exception was the direct cause of the following exception:\n\nrequest = <SubRequest 'browser' for <Function test_LOGIN_SES_2>>\n\n    @pytest.fixture(scope=\"class\", autouse=True)\n    def browser(request):\n        \"\"\"\n        This function return the Browser value to setup method\n        \"\"\"\n>       return request.config.getoption(\"--browser\")\nE       ValueError: no option named '--browser'\n\ntestcase\\conftest.py:81: ValueError\n", "test_name": "test_LOGIN_SES_2", "rerun": "0"}}, "status": {"total_pass": 0, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 1}}, "38": {"suite_name": "testcase/Login/CAP/test_LOGIN_SES_7.py", "tests": {"0": {"status": "ERROR", "message": "self = <_pytest.config.Config object at 0x000001B31F42EAC0>, name = '--browser', default = <NOTSET>, skip = False\n\n    def getoption(self, name: str, default=notset, skip: bool = False):\n        \"\"\"Return command line option value.\n    \n        :param name: Name of the option.  You may also specify\n            the literal ``--OPT`` option instead of the \"dest\" option name.\n        :param default: Default value if no option of that name exists.\n        :param skip: If True, raise pytest.skip if option does not exists\n            or has a None value.\n        \"\"\"\n        name = self._opt2dest.get(name, name)\n        try:\n>           val = getattr(self.option, name)\nE           AttributeError: 'Namespace' object has no attribute '--browser'\n\nC:\\Users\\MIMO\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\_pytest\\config\\__init__.py:1463: AttributeError\n\nThe above exception was the direct cause of the following exception:\n\nrequest = <SubRequest 'browser' for <Function test_LOGIN_SES_2>>\n\n    @pytest.fixture(scope=\"class\", autouse=True)\n    def browser(request):\n        \"\"\"\n        This function return the Browser value to setup method\n        \"\"\"\n>       return request.config.getoption(\"--browser\")\nE       ValueError: no option named '--browser'\n\ntestcase\\conftest.py:81: ValueError\n", "test_name": "test_LOGIN_SES_2", "rerun": "0"}}, "status": {"total_pass": 0, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 1}}, "39": {"suite_name": "testcase/Login/CAP/test_LOGIN_SES_8.py", "tests": {"0": {"status": "ERROR", "message": "self = <_pytest.config.Config object at 0x000001B31F42EAC0>, name = '--browser', default = <NOTSET>, skip = False\n\n    def getoption(self, name: str, default=notset, skip: bool = False):\n        \"\"\"Return command line option value.\n    \n        :param name: Name of the option.  You may also specify\n            the literal ``--OPT`` option instead of the \"dest\" option name.\n        :param default: Default value if no option of that name exists.\n        :param skip: If True, raise pytest.skip if option does not exists\n            or has a None value.\n        \"\"\"\n        name = self._opt2dest.get(name, name)\n        try:\n>           val = getattr(self.option, name)\nE           AttributeError: 'Namespace' object has no attribute '--browser'\n\nC:\\Users\\MIMO\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\_pytest\\config\\__init__.py:1463: AttributeError\n\nThe above exception was the direct cause of the following exception:\n\nrequest = <SubRequest 'browser' for <Function test_LOGIN_SES_2>>\n\n    @pytest.fixture(scope=\"class\", autouse=True)\n    def browser(request):\n        \"\"\"\n        This function return the Browser value to setup method\n        \"\"\"\n>       return request.config.getoption(\"--browser\")\nE       ValueError: no option named '--browser'\n\ntestcase\\conftest.py:81: ValueError\n", "test_name": "test_LOGIN_SES_2", "rerun": "0"}}, "status": {"total_pass": 0, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 1}}, "40": {"suite_name": "testcase/Login/CAP/test_LOGIN_STATUS_1.py", "tests": {"0": {"status": "ERROR", "message": "self = <_pytest.config.Config object at 0x000001B31F42EAC0>, name = '--browser', default = <NOTSET>, skip = False\n\n    def getoption(self, name: str, default=notset, skip: bool = False):\n        \"\"\"Return command line option value.\n    \n        :param name: Name of the option.  You may also specify\n            the literal ``--OPT`` option instead of the \"dest\" option name.\n        :param default: Default value if no option of that name exists.\n        :param skip: If True, raise pytest.skip if option does not exists\n            or has a None value.\n        \"\"\"\n        name = self._opt2dest.get(name, name)\n        try:\n>           val = getattr(self.option, name)\nE           AttributeError: 'Namespace' object has no attribute '--browser'\n\nC:\\Users\\MIMO\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\_pytest\\config\\__init__.py:1463: AttributeError\n\nThe above exception was the direct cause of the following exception:\n\nrequest = <SubRequest 'browser' for <Function test_LOGIN_STATUS_1>>\n\n    @pytest.fixture(scope=\"class\", autouse=True)\n    def browser(request):\n        \"\"\"\n        This function return the Browser value to setup method\n        \"\"\"\n>       return request.config.getoption(\"--browser\")\nE       ValueError: no option named '--browser'\n\ntestcase\\conftest.py:81: ValueError\n", "test_name": "test_LOGIN_STATUS_1", "rerun": "0"}}, "status": {"total_pass": 0, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 1}}, "41": {"suite_name": "testcase/Login/CAP/test_LOGIN_STATUS_10.py", "tests": {"0": {"status": "ERROR", "message": "self = <_pytest.config.Config object at 0x000001B31F42EAC0>, name = '--browser', default = <NOTSET>, skip = False\n\n    def getoption(self, name: str, default=notset, skip: bool = False):\n        \"\"\"Return command line option value.\n    \n        :param name: Name of the option.  You may also specify\n            the literal ``--OPT`` option instead of the \"dest\" option name.\n        :param default: Default value if no option of that name exists.\n        :param skip: If True, raise pytest.skip if option does not exists\n            or has a None value.\n        \"\"\"\n        name = self._opt2dest.get(name, name)\n        try:\n>           val = getattr(self.option, name)\nE           AttributeError: 'Namespace' object has no attribute '--browser'\n\nC:\\Users\\MIMO\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\_pytest\\config\\__init__.py:1463: AttributeError\n\nThe above exception was the direct cause of the following exception:\n\nrequest = <SubRequest 'browser' for <Function test_LOGIN_STATUS_10>>\n\n    @pytest.fixture(scope=\"class\", autouse=True)\n    def browser(request):\n        \"\"\"\n        This function return the Browser value to setup method\n        \"\"\"\n>       return request.config.getoption(\"--browser\")\nE       ValueError: no option named '--browser'\n\ntestcase\\conftest.py:81: ValueError\n", "test_name": "test_LOGIN_STATUS_10", "rerun": "0"}}, "status": {"total_pass": 0, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 1}}, "42": {"suite_name": "testcase/Login/CAP/test_LOGIN_STATUS_11.py", "tests": {"0": {"status": "ERROR", "message": "self = <_pytest.config.Config object at 0x000001B31F42EAC0>, name = '--browser', default = <NOTSET>, skip = False\n\n    def getoption(self, name: str, default=notset, skip: bool = False):\n        \"\"\"Return command line option value.\n    \n        :param name: Name of the option.  You may also specify\n            the literal ``--OPT`` option instead of the \"dest\" option name.\n        :param default: Default value if no option of that name exists.\n        :param skip: If True, raise pytest.skip if option does not exists\n            or has a None value.\n        \"\"\"\n        name = self._opt2dest.get(name, name)\n        try:\n>           val = getattr(self.option, name)\nE           AttributeError: 'Namespace' object has no attribute '--browser'\n\nC:\\Users\\MIMO\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\_pytest\\config\\__init__.py:1463: AttributeError\n\nThe above exception was the direct cause of the following exception:\n\nrequest = <SubRequest 'browser' for <Function test_LOGIN_STATUS_11>>\n\n    @pytest.fixture(scope=\"class\", autouse=True)\n    def browser(request):\n        \"\"\"\n        This function return the Browser value to setup method\n        \"\"\"\n>       return request.config.getoption(\"--browser\")\nE       ValueError: no option named '--browser'\n\ntestcase\\conftest.py:81: ValueError\n", "test_name": "test_LOGIN_STATUS_11", "rerun": "0"}}, "status": {"total_pass": 0, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 1}}, "43": {"suite_name": "testcase/Login/CAP/test_LOGIN_STATUS_12.py", "tests": {"0": {"status": "ERROR", "message": "self = <_pytest.config.Config object at 0x000001B31F42EAC0>, name = '--browser', default = <NOTSET>, skip = False\n\n    def getoption(self, name: str, default=notset, skip: bool = False):\n        \"\"\"Return command line option value.\n    \n        :param name: Name of the option.  You may also specify\n            the literal ``--OPT`` option instead of the \"dest\" option name.\n        :param default: Default value if no option of that name exists.\n        :param skip: If True, raise pytest.skip if option does not exists\n            or has a None value.\n        \"\"\"\n        name = self._opt2dest.get(name, name)\n        try:\n>           val = getattr(self.option, name)\nE           AttributeError: 'Namespace' object has no attribute '--browser'\n\nC:\\Users\\MIMO\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\_pytest\\config\\__init__.py:1463: AttributeError\n\nThe above exception was the direct cause of the following exception:\n\nrequest = <SubRequest 'browser' for <Function test_LOGIN_STATUS_12>>\n\n    @pytest.fixture(scope=\"class\", autouse=True)\n    def browser(request):\n        \"\"\"\n        This function return the Browser value to setup method\n        \"\"\"\n>       return request.config.getoption(\"--browser\")\nE       ValueError: no option named '--browser'\n\ntestcase\\conftest.py:81: ValueError\n", "test_name": "test_LOGIN_STATUS_12", "rerun": "0"}}, "status": {"total_pass": 0, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 1}}, "44": {"suite_name": "testcase/Login/CAP/test_LOGIN_STATUS_13.py", "tests": {"0": {"status": "ERROR", "message": "self = <_pytest.config.Config object at 0x000001B31F42EAC0>, name = '--browser', default = <NOTSET>, skip = False\n\n    def getoption(self, name: str, default=notset, skip: bool = False):\n        \"\"\"Return command line option value.\n    \n        :param name: Name of the option.  You may also specify\n            the literal ``--OPT`` option instead of the \"dest\" option name.\n        :param default: Default value if no option of that name exists.\n        :param skip: If True, raise pytest.skip if option does not exists\n            or has a None value.\n        \"\"\"\n        name = self._opt2dest.get(name, name)\n        try:\n>           val = getattr(self.option, name)\nE           AttributeError: 'Namespace' object has no attribute '--browser'\n\nC:\\Users\\MIMO\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\_pytest\\config\\__init__.py:1463: AttributeError\n\nThe above exception was the direct cause of the following exception:\n\nrequest = <SubRequest 'browser' for <Function test_LOGIN_STATUS_11>>\n\n    @pytest.fixture(scope=\"class\", autouse=True)\n    def browser(request):\n        \"\"\"\n        This function return the Browser value to setup method\n        \"\"\"\n>       return request.config.getoption(\"--browser\")\nE       ValueError: no option named '--browser'\n\ntestcase\\conftest.py:81: ValueError\n", "test_name": "test_LOGIN_STATUS_11", "rerun": "0"}}, "status": {"total_pass": 0, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 1}}, "45": {"suite_name": "testcase/Login/CAP/test_LOGIN_STATUS_14.py", "tests": {"0": {"status": "ERROR", "message": "self = <_pytest.config.Config object at 0x000001B31F42EAC0>, name = '--browser', default = <NOTSET>, skip = False\n\n    def getoption(self, name: str, default=notset, skip: bool = False):\n        \"\"\"Return command line option value.\n    \n        :param name: Name of the option.  You may also specify\n            the literal ``--OPT`` option instead of the \"dest\" option name.\n        :param default: Default value if no option of that name exists.\n        :param skip: If True, raise pytest.skip if option does not exists\n            or has a None value.\n        \"\"\"\n        name = self._opt2dest.get(name, name)\n        try:\n>           val = getattr(self.option, name)\nE           AttributeError: 'Namespace' object has no attribute '--browser'\n\nC:\\Users\\MIMO\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\_pytest\\config\\__init__.py:1463: AttributeError\n\nThe above exception was the direct cause of the following exception:\n\nrequest = <SubRequest 'browser' for <Function test_LOGIN_STATUS_12>>\n\n    @pytest.fixture(scope=\"class\", autouse=True)\n    def browser(request):\n        \"\"\"\n        This function return the Browser value to setup method\n        \"\"\"\n>       return request.config.getoption(\"--browser\")\nE       ValueError: no option named '--browser'\n\ntestcase\\conftest.py:81: ValueError\n", "test_name": "test_LOGIN_STATUS_12", "rerun": "0"}}, "status": {"total_pass": 0, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 1}}, "46": {"suite_name": "testcase/Login/CAP/test_LOGIN_STATUS_2.py", "tests": {"0": {"status": "ERROR", "message": "self = <_pytest.config.Config object at 0x000001B31F42EAC0>, name = '--browser', default = <NOTSET>, skip = False\n\n    def getoption(self, name: str, default=notset, skip: bool = False):\n        \"\"\"Return command line option value.\n    \n        :param name: Name of the option.  You may also specify\n            the literal ``--OPT`` option instead of the \"dest\" option name.\n        :param default: Default value if no option of that name exists.\n        :param skip: If True, raise pytest.skip if option does not exists\n            or has a None value.\n        \"\"\"\n        name = self._opt2dest.get(name, name)\n        try:\n>           val = getattr(self.option, name)\nE           AttributeError: 'Namespace' object has no attribute '--browser'\n\nC:\\Users\\MIMO\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\_pytest\\config\\__init__.py:1463: AttributeError\n\nThe above exception was the direct cause of the following exception:\n\nrequest = <SubRequest 'browser' for <Function test_LOGIN_STATUS_2>>\n\n    @pytest.fixture(scope=\"class\", autouse=True)\n    def browser(request):\n        \"\"\"\n        This function return the Browser value to setup method\n        \"\"\"\n>       return request.config.getoption(\"--browser\")\nE       ValueError: no option named '--browser'\n\ntestcase\\conftest.py:81: ValueError\n", "test_name": "test_LOGIN_STATUS_2", "rerun": "0"}}, "status": {"total_pass": 0, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 1}}, "47": {"suite_name": "testcase/Login/CAP/test_LOGIN_STATUS_3.py", "tests": {"0": {"status": "ERROR", "message": "self = <_pytest.config.Config object at 0x000001B31F42EAC0>, name = '--browser', default = <NOTSET>, skip = False\n\n    def getoption(self, name: str, default=notset, skip: bool = False):\n        \"\"\"Return command line option value.\n    \n        :param name: Name of the option.  You may also specify\n            the literal ``--OPT`` option instead of the \"dest\" option name.\n        :param default: Default value if no option of that name exists.\n        :param skip: If True, raise pytest.skip if option does not exists\n            or has a None value.\n        \"\"\"\n        name = self._opt2dest.get(name, name)\n        try:\n>           val = getattr(self.option, name)\nE           AttributeError: 'Namespace' object has no attribute '--browser'\n\nC:\\Users\\MIMO\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\_pytest\\config\\__init__.py:1463: AttributeError\n\nThe above exception was the direct cause of the following exception:\n\nrequest = <SubRequest 'browser' for <Function test_LOGIN_STATUS_3>>\n\n    @pytest.fixture(scope=\"class\", autouse=True)\n    def browser(request):\n        \"\"\"\n        This function return the Browser value to setup method\n        \"\"\"\n>       return request.config.getoption(\"--browser\")\nE       ValueError: no option named '--browser'\n\ntestcase\\conftest.py:81: ValueError\n", "test_name": "test_LOGIN_STATUS_3", "rerun": "0"}}, "status": {"total_pass": 0, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 1}}, "48": {"suite_name": "testcase/Login/CAP/test_LOGIN_STATUS_4.py", "tests": {"0": {"status": "ERROR", "message": "self = <_pytest.config.Config object at 0x000001B31F42EAC0>, name = '--browser', default = <NOTSET>, skip = False\n\n    def getoption(self, name: str, default=notset, skip: bool = False):\n        \"\"\"Return command line option value.\n    \n        :param name: Name of the option.  You may also specify\n            the literal ``--OPT`` option instead of the \"dest\" option name.\n        :param default: Default value if no option of that name exists.\n        :param skip: If True, raise pytest.skip if option does not exists\n            or has a None value.\n        \"\"\"\n        name = self._opt2dest.get(name, name)\n        try:\n>           val = getattr(self.option, name)\nE           AttributeError: 'Namespace' object has no attribute '--browser'\n\nC:\\Users\\MIMO\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\_pytest\\config\\__init__.py:1463: AttributeError\n\nThe above exception was the direct cause of the following exception:\n\nrequest = <SubRequest 'browser' for <Function test_LOGIN_STATUS_4>>\n\n    @pytest.fixture(scope=\"class\", autouse=True)\n    def browser(request):\n        \"\"\"\n        This function return the Browser value to setup method\n        \"\"\"\n>       return request.config.getoption(\"--browser\")\nE       ValueError: no option named '--browser'\n\ntestcase\\conftest.py:81: ValueError\n", "test_name": "test_LOGIN_STATUS_4", "rerun": "0"}}, "status": {"total_pass": 0, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 1}}, "49": {"suite_name": "testcase/Login/CAP/test_LOGIN_STATUS_5.py", "tests": {"0": {"status": "ERROR", "message": "self = <_pytest.config.Config object at 0x000001B31F42EAC0>, name = '--browser', default = <NOTSET>, skip = False\n\n    def getoption(self, name: str, default=notset, skip: bool = False):\n        \"\"\"Return command line option value.\n    \n        :param name: Name of the option.  You may also specify\n            the literal ``--OPT`` option instead of the \"dest\" option name.\n        :param default: Default value if no option of that name exists.\n        :param skip: If True, raise pytest.skip if option does not exists\n            or has a None value.\n        \"\"\"\n        name = self._opt2dest.get(name, name)\n        try:\n>           val = getattr(self.option, name)\nE           AttributeError: 'Namespace' object has no attribute '--browser'\n\nC:\\Users\\MIMO\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\_pytest\\config\\__init__.py:1463: AttributeError\n\nThe above exception was the direct cause of the following exception:\n\nrequest = <SubRequest 'browser' for <Function test_LOGIN_STATUS_5>>\n\n    @pytest.fixture(scope=\"class\", autouse=True)\n    def browser(request):\n        \"\"\"\n        This function return the Browser value to setup method\n        \"\"\"\n>       return request.config.getoption(\"--browser\")\nE       ValueError: no option named '--browser'\n\ntestcase\\conftest.py:81: ValueError\n", "test_name": "test_LOGIN_STATUS_5", "rerun": "0"}}, "status": {"total_pass": 0, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 1}}, "50": {"suite_name": "testcase/Login/CAP/test_LOGIN_STATUS_6.py", "tests": {"0": {"status": "ERROR", "message": "self = <_pytest.config.Config object at 0x000001B31F42EAC0>, name = '--browser', default = <NOTSET>, skip = False\n\n    def getoption(self, name: str, default=notset, skip: bool = False):\n        \"\"\"Return command line option value.\n    \n        :param name: Name of the option.  You may also specify\n            the literal ``--OPT`` option instead of the \"dest\" option name.\n        :param default: Default value if no option of that name exists.\n        :param skip: If True, raise pytest.skip if option does not exists\n            or has a None value.\n        \"\"\"\n        name = self._opt2dest.get(name, name)\n        try:\n>           val = getattr(self.option, name)\nE           AttributeError: 'Namespace' object has no attribute '--browser'\n\nC:\\Users\\MIMO\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\_pytest\\config\\__init__.py:1463: AttributeError\n\nThe above exception was the direct cause of the following exception:\n\nrequest = <SubRequest 'browser' for <Function test_LOGIN_STATUS_6>>\n\n    @pytest.fixture(scope=\"class\", autouse=True)\n    def browser(request):\n        \"\"\"\n        This function return the Browser value to setup method\n        \"\"\"\n>       return request.config.getoption(\"--browser\")\nE       ValueError: no option named '--browser'\n\ntestcase\\conftest.py:81: ValueError\n", "test_name": "test_LOGIN_STATUS_6", "rerun": "0"}}, "status": {"total_pass": 0, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 1}}, "51": {"suite_name": "testcase/Login/CAP/test_LOGIN_STATUS_7.py", "tests": {"0": {"status": "ERROR", "message": "self = <_pytest.config.Config object at 0x000001B31F42EAC0>, name = '--browser', default = <NOTSET>, skip = False\n\n    def getoption(self, name: str, default=notset, skip: bool = False):\n        \"\"\"Return command line option value.\n    \n        :param name: Name of the option.  You may also specify\n            the literal ``--OPT`` option instead of the \"dest\" option name.\n        :param default: Default value if no option of that name exists.\n        :param skip: If True, raise pytest.skip if option does not exists\n            or has a None value.\n        \"\"\"\n        name = self._opt2dest.get(name, name)\n        try:\n>           val = getattr(self.option, name)\nE           AttributeError: 'Namespace' object has no attribute '--browser'\n\nC:\\Users\\MIMO\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\_pytest\\config\\__init__.py:1463: AttributeError\n\nThe above exception was the direct cause of the following exception:\n\nrequest = <SubRequest 'browser' for <Function test_LOGIN_STATUS_7>>\n\n    @pytest.fixture(scope=\"class\", autouse=True)\n    def browser(request):\n        \"\"\"\n        This function return the Browser value to setup method\n        \"\"\"\n>       return request.config.getoption(\"--browser\")\nE       ValueError: no option named '--browser'\n\ntestcase\\conftest.py:81: ValueError\n", "test_name": "test_LOGIN_STATUS_7", "rerun": "0"}}, "status": {"total_pass": 0, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 1}}, "52": {"suite_name": "testcase/Login/CAP/test_LOGIN_STATUS_8.py", "tests": {"0": {"status": "ERROR", "message": "self = <_pytest.config.Config object at 0x000001B31F42EAC0>, name = '--browser', default = <NOTSET>, skip = False\n\n    def getoption(self, name: str, default=notset, skip: bool = False):\n        \"\"\"Return command line option value.\n    \n        :param name: Name of the option.  You may also specify\n            the literal ``--OPT`` option instead of the \"dest\" option name.\n        :param default: Default value if no option of that name exists.\n        :param skip: If True, raise pytest.skip if option does not exists\n            or has a None value.\n        \"\"\"\n        name = self._opt2dest.get(name, name)\n        try:\n>           val = getattr(self.option, name)\nE           AttributeError: 'Namespace' object has no attribute '--browser'\n\nC:\\Users\\MIMO\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\_pytest\\config\\__init__.py:1463: AttributeError\n\nThe above exception was the direct cause of the following exception:\n\nrequest = <SubRequest 'browser' for <Function test_LOGIN_STATUS_8>>\n\n    @pytest.fixture(scope=\"class\", autouse=True)\n    def browser(request):\n        \"\"\"\n        This function return the Browser value to setup method\n        \"\"\"\n>       return request.config.getoption(\"--browser\")\nE       ValueError: no option named '--browser'\n\ntestcase\\conftest.py:81: ValueError\n", "test_name": "test_LOGIN_STATUS_8", "rerun": "0"}}, "status": {"total_pass": 0, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 1}}, "53": {"suite_name": "testcase/Login/CAP/test_LOGIN_STATUS_9.py", "tests": {"0": {"status": "ERROR", "message": "self = <_pytest.config.Config object at 0x000001B31F42EAC0>, name = '--browser', default = <NOTSET>, skip = False\n\n    def getoption(self, name: str, default=notset, skip: bool = False):\n        \"\"\"Return command line option value.\n    \n        :param name: Name of the option.  You may also specify\n            the literal ``--OPT`` option instead of the \"dest\" option name.\n        :param default: Default value if no option of that name exists.\n        :param skip: If True, raise pytest.skip if option does not exists\n            or has a None value.\n        \"\"\"\n        name = self._opt2dest.get(name, name)\n        try:\n>           val = getattr(self.option, name)\nE           AttributeError: 'Namespace' object has no attribute '--browser'\n\nC:\\Users\\MIMO\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\_pytest\\config\\__init__.py:1463: AttributeError\n\nThe above exception was the direct cause of the following exception:\n\nrequest = <SubRequest 'browser' for <Function test_LOGIN_STATUS_9>>\n\n    @pytest.fixture(scope=\"class\", autouse=True)\n    def browser(request):\n        \"\"\"\n        This function return the Browser value to setup method\n        \"\"\"\n>       return request.config.getoption(\"--browser\")\nE       ValueError: no option named '--browser'\n\ntestcase\\conftest.py:81: ValueError\n", "test_name": "test_LOGIN_STATUS_9", "rerun": "0"}}, "status": {"total_pass": 0, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 1}}}}, "date": "September 22, 2022", "start_time": 1663842739.1276093, "total_suite": 54, "status": "FAIL", "status_list": {"pass": "0", "fail": "0", "skip": "0", "error": "54", "xpass": "0", "xfail": "0", "rerun": "0"}, "total_tests": "54"}