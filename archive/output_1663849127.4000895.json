{"content": {"suites": {"0": {"status": {"total_pass": 0, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 1}, "tests": {"0": {"status": "ERROR", "message": "self = <pages.SettingWirelessPage.WirelessRadioPage object at 0x00000231222AA7F0>, xpath = \"//a[@id='titleSettingCap']\"\n\n    def wait_and_click_element(self, xpath: str):\n        \"\"\"\n        Description: Wait until element can click able, then click element\n        :param driver: Web Driver\n        :param xpath: xpath for this element\n        :param time_out: time for implicitly wait\n        :return:\n        \"\"\"\n        try:\n>           element: WebElement = WebDriverWait(self.driver, self.timeout). \\\n                until(EC.element_to_be_clickable((By.XPATH, xpath)))\n\nbase\\WEBLib.py:205: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"83c8c4e8c4b2ba22e03ddca5b9d85b59\")>, method = <selenium.webdriver.support.expected_conditions.element_to_be_clickable object at 0x00000231222AA4C0>, message = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nC:\\Users\\MIMO\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <testcase.radio2GView.test_RADIO2GVIEW_RESULT_3.Test_Radio2GView object at 0x000002312225D970>\n\n    @pytest.fixture(autouse=True, scope=\"function\")\n    def set_up(self):\n        self.timeOut = 60\n        self.exp = {\"code\": 0, \"msg\": \"Success\", \"action\": \"radio2.4GView\"}\n        self.dataLst = [\"20Mhz\", \"40Mhz\", \"20/40Mhz\"]\n        self.radio2G = radio24GViewClient()\n    \n        self.wrp = WirelessRadioPage(self.driver)\n>       self.wrp.navigate_to_radio_2G_page()\n\ntestcase\\radio2GView\\test_RADIO2GVIEW_RESULT_3.py:17: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages\\SettingWirelessPage.py:166: in navigate_to_radio_2G_page\n    self.click_Setting_Cap()\npages\\SettingWirelessPage.py:17: in click_Setting_Cap\n    self.wait_and_click_element(self.lnkSettingCap_xpath)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pages.SettingWirelessPage.WirelessRadioPage object at 0x00000231222AA7F0>, xpath = \"//a[@id='titleSettingCap']\"\n\n    def wait_and_click_element(self, xpath: str):\n        \"\"\"\n        Description: Wait until element can click able, then click element\n        :param driver: Web Driver\n        :param xpath: xpath for this element\n        :param time_out: time for implicitly wait\n        :return:\n        \"\"\"\n        try:\n            element: WebElement = WebDriverWait(self.driver, self.timeout). \\\n                until(EC.element_to_be_clickable((By.XPATH, xpath)))\n            element.click()\n        except Exception as exc:\n>           raise Exception(\"Element cannot clickable!\" + \"\\n\" + str(exc))\nE           Exception: Element cannot clickable!\nE           Message:\n\nbase\\WEBLib.py:209: Exception\n", "test_name": "test_RADIO_2G_ACT_1", "rerun": "0"}}, "suite_name": "testcase/radio2GView/test_RADIO2GVIEW_RESULT_3.py"}}}, "date": "September 22, 2022", "start_time": 1663849090.220067, "total_suite": 1, "status": "FAIL", "status_list": {"pass": "0", "fail": "0", "skip": "0", "error": "1", "xpass": "0", "xfail": "0", "rerun": "0"}, "total_tests": "1"}